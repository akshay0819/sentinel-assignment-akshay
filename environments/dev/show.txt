# aws_security_group_rule.allow_gateway_to_backend:
resource "aws_security_group_rule" "allow_gateway_to_backend" {
    description              = "Allow gateway EKS cluster to access backend"
    from_port                = 80
    id                       = "sgrule-2757198264"
    protocol                 = "tcp"
    region                   = "eu-central-1"
    security_group_id        = "sg-08aa83ff0c0771918"
    security_group_rule_id   = "sgr-0c1c4a48afb4158cc"
    self                     = false
    source_security_group_id = "sg-08e07e95580cdeac9"
    to_port                  = 80
    type                     = "ingress"
}


# module.backend.aws_dynamodb_table.tf_lock:
resource "aws_dynamodb_table" "tf_lock" {
    arn                         = "arn:aws:dynamodb:eu-central-1:721500739616:table/rapyd-sentinel-tf-lock-dev"
    billing_mode                = "PAY_PER_REQUEST"
    deletion_protection_enabled = false
    hash_key                    = "LockID"
    id                          = "rapyd-sentinel-tf-lock-dev"
    name                        = "rapyd-sentinel-tf-lock-dev"
    read_capacity               = 0
    region                      = "eu-central-1"
    stream_enabled              = false
    table_class                 = "STANDARD"
    tags                        = {
        "Environment" = "dev"
        "Name"        = "tf-lock"
    }
    tags_all                    = {
        "Environment" = "dev"
        "Name"        = "tf-lock"
    }
    write_capacity              = 0

    attribute {
        name = "LockID"
        type = "S"
    }

    point_in_time_recovery {
        enabled                 = false
        recovery_period_in_days = 0
    }

    ttl {
        enabled = false
    }
}

# module.backend.aws_s3_bucket.tf_backend:
resource "aws_s3_bucket" "tf_backend" {
    arn                         = "arn:aws:s3:::rapyd-sentinel-tf-state-dev-eu-central-1"
    bucket                      = "rapyd-sentinel-tf-state-dev-eu-central-1"
    bucket_domain_name          = "rapyd-sentinel-tf-state-dev-eu-central-1.s3.amazonaws.com"
    bucket_region               = "eu-central-1"
    bucket_regional_domain_name = "rapyd-sentinel-tf-state-dev-eu-central-1.s3.eu-central-1.amazonaws.com"
    force_destroy               = false
    hosted_zone_id              = "Z21DNDUVLTQW6Q"
    id                          = "rapyd-sentinel-tf-state-dev-eu-central-1"
    object_lock_enabled         = false
    region                      = "eu-central-1"
    request_payer               = "BucketOwner"
    tags                        = {
        "Environment" = "dev"
        "Name"        = "tf-backend"
    }
    tags_all                    = {
        "Environment" = "dev"
        "Name"        = "tf-backend"
    }

    grant {
        id          = "21714ff93f41dcb323b22ffbe4e54363a7763a1c4fd8abd3ba22fac916829a54"
        permissions = [
            "FULL_CONTROL",
        ]
        type        = "CanonicalUser"
    }

    server_side_encryption_configuration {
        rule {
            bucket_key_enabled = false

            apply_server_side_encryption_by_default {
                sse_algorithm = "AES256"
            }
        }
    }

    versioning {
        enabled    = true
        mfa_delete = false
    }
}

# module.backend.aws_s3_bucket_versioning.tf_backend_versioning:
resource "aws_s3_bucket_versioning" "tf_backend_versioning" {
    bucket = "rapyd-sentinel-tf-state-dev-eu-central-1"
    id     = "rapyd-sentinel-tf-state-dev-eu-central-1"
    region = "eu-central-1"

    versioning_configuration {
        status = "Enabled"
    }
}


# module.bastion_backend.aws_iam_role.ssm_ec2_role:
resource "aws_iam_role" "ssm_ec2_role" {
    arn                   = "arn:aws:iam::721500739616:role/akshay-eks-ssm-ec2-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-07-16T14:06:46Z"
    force_detach_policies = false
    id                    = "akshay-eks-ssm-ec2-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
    ]
    max_session_duration  = 3600
    name                  = "akshay-eks-ssm-ec2-role"
    path                  = "/"
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA2P7GLTAQH332IHMAK"

    inline_policy {
        name   = "akshay-eks-ssm-s3-read"
        policy = jsonencode(
            {
                Statement = [
                    {
                        Action   = [
                            "s3:GetObject",
                            "s3:ListBucket",
                        ]
                        Effect   = "Allow"
                        Resource = [
                            "arn:aws:s3:::rapyd-sentinel-deploy-artifacts",
                            "arn:aws:s3:::rapyd-sentinel-deploy-artifacts/*",
                        ]
                    },
                ]
                Version   = "2012-10-17"
            }
        )
    }
}

# module.bastion_backend.aws_iam_role_policy.s3_read_access:
resource "aws_iam_role_policy" "s3_read_access" {
    id     = "akshay-eks-ssm-ec2-role:akshay-eks-ssm-s3-read"
    name   = "akshay-eks-ssm-s3-read"
    policy = jsonencode(
        {
            Statement = [
                {
                    Action   = [
                        "s3:GetObject",
                        "s3:ListBucket",
                    ]
                    Effect   = "Allow"
                    Resource = [
                        "arn:aws:s3:::rapyd-sentinel-deploy-artifacts",
                        "arn:aws:s3:::rapyd-sentinel-deploy-artifacts/*",
                    ]
                },
            ]
            Version   = "2012-10-17"
        }
    )
    role   = "akshay-eks-ssm-ec2-role"
}

# module.bastion_backend.aws_iam_role_policy_attachment.eks:
resource "aws_iam_role_policy_attachment" "eks" {
    id         = "akshay-eks-ssm-ec2-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    role       = "akshay-eks-ssm-ec2-role"
}

# module.bastion_backend.aws_iam_role_policy_attachment.ssm:
resource "aws_iam_role_policy_attachment" "ssm" {
    id         = "akshay-eks-ssm-ec2-role/arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    role       = "akshay-eks-ssm-ec2-role"
}

# module.bastion_backend.aws_security_group.bastion:
resource "aws_security_group" "bastion" {
    arn                    = "arn:aws:ec2:eu-central-1:721500739616:security-group/sg-04faaae475352778c"
    description            = "Allow internal access to VPC endpoints and EKS"
    egress                 = [
        {
            cidr_blocks      = [
                "0.0.0.0/0",
            ]
            description      = ""
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
        },
    ]
    id                     = "sg-04faaae475352778c"
    ingress                = []
    name                   = "eks-bastion-bastion-sg"
    owner_id               = "721500739616"
    region                 = "eu-central-1"
    revoke_rules_on_delete = false
    tags                   = {
        "Environment" = "dev"
        "Name"        = "eks-bastion-bastion-sg"
    }
    tags_all               = {
        "Environment" = "dev"
        "Name"        = "eks-bastion-bastion-sg"
    }
    vpc_id                 = "vpc-0ce2c1b70a1b6bdc0"
}


# module.eks_backend.aws_eks_cluster.this:
resource "aws_eks_cluster" "this" {
    arn                           = "arn:aws:eks:eu-central-1:721500739616:cluster/eks-backend"
    bootstrap_self_managed_addons = true
    certificate_authority         = [
        {
            data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRXQwY3BjSTc1M013RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01UWXhNREF3TkRoYUZ3MHpOVEEzTVRReE1EQTFORGhhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMvZlNwQjJhZGRESzB2RENSTlpKalJXMUYreGdHMmdhNXZ3VmZHZW01Z0QvWlExazFPTHRETENkcEUKM2JqL2VXYkthNi9TR0xzK2hzUUJNRnpWNWNJVmxzTDdPenNmSm94VzVKeWZWcVJZeUZjdXc5akMxS0FZNkh1cgpJYmUvbTh0ZXRyZm0wcW1BdFJkRTY5YnppZmt3RnU0RW4vMUlyOU00cEx1UWZZMFhYN1ZVVi9ZWmlQS0oxdnhMCkpTNXZPeHNRSUt6R3NvK2FYR1F3ajhRMFhjRHlYSHhhV1h5azZIaHBidzVxYXk0TmYzZmJ3b0d5RE5UUExBVG4KemVPazk0Q1N5VHA3bEJZTEZLdnlIV3pTVEp2aG1iQXNHbmtVQm5oaFFkRnZGVnoyckZ3V1Q1K2JnV2djeWR1WQp6TitRYVlRdE5ZNW1nYVRVSE4vNDVaQzhZMUxOQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTRVZpb1BySGxmOWw0ajlzSXoxT0dlMFhnZEV6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWpNNEh0dnFLLwptSG84dGQ5UW16aFZER00zbXhwUFlZeGRoNFp0S0NtNngrMnBKbFpIbkdjekIyMzhiQllxMC9TUkw0UElpL0RXCnBJMkdadHpCVFpLTGovS2t4L2ZzaCt3aEVodCtaQzRFMFRIKyszMjFYRENvcnZlU0wxbDhmWEdwd1VueHQyd20KZG5kQVhQRkM0c2xhYjJsTENJbVM1VHlUQU1NckgzazFCNGZvb0E1cDhlYXQ0OUhSWkVkNm9kZlhWT1NReXRlQQpmalZrblB2ZXQraXlEbFlKbjlBVEwvQzdkWjRmQkdrTWJzajlTYzlEdEM5YkIrN2F3U3g0S1dnU1M2OTBZRWhkCkV5Qm0wUmprcFVIeUFnU24xdmhpNHd3eVhkMWtMUFpJK3BEV0hLWHNFQXBnVHhqRnREbHJvRUJZU0UrZjl0Y0MKU2RTNS80NlY3Z2Y1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
    ]
    created_at                    = "2025-07-16T10:01:36Z"
    enabled_cluster_log_types     = []
    endpoint                      = "https://7FBB160CAF9FEE2A092F8A4768A40C01.gr7.eu-central-1.eks.amazonaws.com"
    id                            = "eks-backend"
    identity                      = [
        {
            oidc = [
                {
                    issuer = "https://oidc.eks.eu-central-1.amazonaws.com/id/7FBB160CAF9FEE2A092F8A4768A40C01"
                },
            ]
        },
    ]
    name                          = "eks-backend"
    platform_version              = "eks.40"
    region                        = "eu-central-1"
    role_arn                      = "arn:aws:iam::721500739616:role/akshay-eks-eks-backend-cluster-role"
    status                        = "ACTIVE"
    tags                          = {
        "Environment" = "dev"
    }
    tags_all                      = {
        "Environment" = "dev"
    }
    version                       = "1.29"

    access_config {
        authentication_mode                         = "CONFIG_MAP"
        bootstrap_cluster_creator_admin_permissions = true
    }

    kubernetes_network_config {
        ip_family         = "ipv4"
        service_ipv4_cidr = "172.20.0.0/16"

        elastic_load_balancing {
            enabled = false
        }
    }

    upgrade_policy {
        support_type = "EXTENDED"
    }

    vpc_config {
        cluster_security_group_id = "sg-08aa83ff0c0771918"
        endpoint_private_access   = true
        endpoint_public_access    = false
        public_access_cidrs       = []
        security_group_ids        = []
        subnet_ids                = [
            "subnet-01460d1bb08911ae0",
            "subnet-03b81b88df8f5deab",
        ]
        vpc_id                    = "vpc-0ce2c1b70a1b6bdc0"
    }
}

# module.eks_backend.aws_eks_node_group.this:
resource "aws_eks_node_group" "this" {
    ami_type        = "AL2_x86_64"
    arn             = "arn:aws:eks:eu-central-1:721500739616:nodegroup/eks-backend/eks-backend-node-group/76cc0982-7c9c-bda6-96c4-60d1f5af9323"
    capacity_type   = "ON_DEMAND"
    cluster_name    = "eks-backend"
    disk_size       = 20
    id              = "eks-backend:eks-backend-node-group"
    instance_types  = [
        "t3.medium",
    ]
    labels          = {}
    node_group_name = "eks-backend-node-group"
    node_role_arn   = "arn:aws:iam::721500739616:role/akshay-eks-eks-backend-nodegroup-role"
    region          = "eu-central-1"
    release_version = "1.29.15-20250704"
    resources       = [
        {
            autoscaling_groups              = [
                {
                    name = "eks-eks-backend-node-group-76cc0982-7c9c-bda6-96c4-60d1f5af9323"
                },
            ]
            remote_access_security_group_id = ""
        },
    ]
    status          = "ACTIVE"
    subnet_ids      = [
        "subnet-01460d1bb08911ae0",
        "subnet-03b81b88df8f5deab",
    ]
    tags            = {
        "Environment" = "dev"
    }
    tags_all        = {
        "Environment" = "dev"
    }
    version         = "1.29"

    scaling_config {
        desired_size = 2
        max_size     = 3
        min_size     = 1
    }

    update_config {
        max_unavailable            = 1
        max_unavailable_percentage = 0
    }
}

# module.eks_backend.aws_iam_role.eks_cluster_role:
resource "aws_iam_role" "eks_cluster_role" {
    arn                   = "arn:aws:iam::721500739616:role/akshay-eks-eks-backend-cluster-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "eks.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-07-16T10:01:33Z"
    force_detach_policies = false
    id                    = "akshay-eks-eks-backend-cluster-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
    ]
    max_session_duration  = 3600
    name                  = "akshay-eks-eks-backend-cluster-role"
    path                  = "/"
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA2P7GLTAQAKOUJO3PE"
}

# module.eks_backend.aws_iam_role.node_group_role:
resource "aws_iam_role" "node_group_role" {
    arn                   = "arn:aws:iam::721500739616:role/akshay-eks-eks-backend-nodegroup-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-07-16T10:01:33Z"
    force_detach_policies = false
    id                    = "akshay-eks-eks-backend-nodegroup-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
    ]
    max_session_duration  = 3600
    name                  = "akshay-eks-eks-backend-nodegroup-role"
    path                  = "/"
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA2P7GLTAQNS6FBNYEJ"
}

# module.eks_backend.aws_iam_role_policy_attachment.eks_cluster_policy:
resource "aws_iam_role_policy_attachment" "eks_cluster_policy" {
    id         = "akshay-eks-eks-backend-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    role       = "akshay-eks-eks-backend-cluster-role"
}

# module.eks_backend.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-backend-nodegroup-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
    role       = "akshay-eks-eks-backend-nodegroup-role"
}

# module.eks_backend.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-backend-nodegroup-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
    role       = "akshay-eks-eks-backend-nodegroup-role"
}

# module.eks_backend.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-backend-nodegroup-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
    role       = "akshay-eks-eks-backend-nodegroup-role"
}


# module.eks_gateway.aws_eks_cluster.this:
resource "aws_eks_cluster" "this" {
    arn                           = "arn:aws:eks:eu-central-1:721500739616:cluster/eks-gateway"
    bootstrap_self_managed_addons = true
    certificate_authority         = [
        {
            data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRlg4WU8rSDJ2RXN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01UWXhNREF4TURWYUZ3MHpOVEEzTVRReE1EQTJNRFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURLY3JVWmRwZmFkTGJMeEpTeEIzMm9UbnBjUG85ZlRBSWd6dUc3K0ZCb3luZGgvMEo3czQ5eVF3ZEYKTDdBc0hWM0owVC9Jdjlmbys3bkd6UzZqbWU1NG5ZL1IrZ1o1RGpWRDI4OUwweXVtc2puWmhSN0VJaWRyclpyUApaZksxRC9YSEhuVnQyaTRNNmE1aGZ5RVJXUWI2SXZ0SEp2ZncyK0pRcy84eDNEdnQ0U2pJQ1RFMytTK3lkT0JZCmRvdStHTUdNK0lpcm1RQzY5WjhkaEhkaG9iQStLV2s4N0N2VFZkYlNYbGxtdCt2UXNPZ3dpMlRzYnZWb0xjZloKaEpuWGwvWnZuSXNOY0VQaCtMMEdrMkhZeEc3dXBoT0JGTUlXUlA4Y3BVQUNiUFUvUGh4bDRVa1ZsZlF3dXo2eAptV1JSWVFqY1d4V0hobVh4bjVucjRzZTJUa0R2QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUMEd1aEZkdW1Hb2dzZTNaUXhoemFqQmM2MkNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkVVdEFPNzBrVwpMU2xxdnM0QUFTd1l4VjFzRVFvVWNXaGJlZXl3YXBSQlJ0QmQzUGgvN2ZhbERFUzVvcitTZ2x0WHNRVnEvcEFJClN2akgzcmc3WWdwZjkyTGxZTm14ZjR4ZTYwWStPV1lwa2VlSG12MVZpeFNHOUI0bnFVRlNUckVmdUhYankxSE0KUG4zNFQ4bDF1Y3hFMmZsaWhuOWMzRks2anZ2NzRpWjc2Wm15RmtEUjByaCs4aklIUmRyNmdvVDh4cGVGdXJkOApSZWlnd0J5ZlpQQlZyWG1ISlRXV0syTk52Q2Y4eW1zbjk4RTQ2YThENnRGaExIdm1JK1BIaVFBb1FuMDJKZTZPCitKZUM0d2RUSGJmU0gwb0hETkQ3TG5iNTcxTUhoRkJmOHBhOGx2d05jY0JWcldVbHIzK1BWN0VDR2xOTDUwbloKd3kvbW9JMVRuL01ICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
    ]
    created_at                    = "2025-07-16T10:01:35Z"
    enabled_cluster_log_types     = []
    endpoint                      = "https://326786C91D5B0AB8EBE9A06E524E8223.gr7.eu-central-1.eks.amazonaws.com"
    id                            = "eks-gateway"
    identity                      = [
        {
            oidc = [
                {
                    issuer = "https://oidc.eks.eu-central-1.amazonaws.com/id/326786C91D5B0AB8EBE9A06E524E8223"
                },
            ]
        },
    ]
    name                          = "eks-gateway"
    platform_version              = "eks.40"
    region                        = "eu-central-1"
    role_arn                      = "arn:aws:iam::721500739616:role/akshay-eks-eks-gateway-cluster-role"
    status                        = "ACTIVE"
    tags                          = {
        "Environment" = "dev"
    }
    tags_all                      = {
        "Environment" = "dev"
    }
    version                       = "1.29"

    access_config {
        authentication_mode                         = "CONFIG_MAP"
        bootstrap_cluster_creator_admin_permissions = true
    }

    kubernetes_network_config {
        ip_family         = "ipv4"
        service_ipv4_cidr = "172.20.0.0/16"

        elastic_load_balancing {
            enabled = false
        }
    }

    upgrade_policy {
        support_type = "EXTENDED"
    }

    vpc_config {
        cluster_security_group_id = "sg-08e07e95580cdeac9"
        endpoint_private_access   = true
        endpoint_public_access    = true
        public_access_cidrs       = [
            "0.0.0.0/0",
        ]
        security_group_ids        = []
        subnet_ids                = [
            "subnet-006025148b5065ac6",
            "subnet-0ff27771a41e93b18",
        ]
        vpc_id                    = "vpc-0532eab6d8e79dd63"
    }
}

# module.eks_gateway.aws_eks_node_group.this:
resource "aws_eks_node_group" "this" {
    ami_type        = "AL2_x86_64"
    arn             = "arn:aws:eks:eu-central-1:721500739616:nodegroup/eks-gateway/eks-gateway-node-group/6acc0982-7c9d-6db9-2905-6bbc6874336f"
    capacity_type   = "ON_DEMAND"
    cluster_name    = "eks-gateway"
    disk_size       = 20
    id              = "eks-gateway:eks-gateway-node-group"
    instance_types  = [
        "t3.medium",
    ]
    labels          = {}
    node_group_name = "eks-gateway-node-group"
    node_role_arn   = "arn:aws:iam::721500739616:role/akshay-eks-eks-gateway-nodegroup-role"
    region          = "eu-central-1"
    release_version = "1.29.15-20250704"
    resources       = [
        {
            autoscaling_groups              = [
                {
                    name = "eks-eks-gateway-node-group-6acc0982-7c9d-6db9-2905-6bbc6874336f"
                },
            ]
            remote_access_security_group_id = ""
        },
    ]
    status          = "ACTIVE"
    subnet_ids      = [
        "subnet-006025148b5065ac6",
        "subnet-0ff27771a41e93b18",
    ]
    tags            = {
        "Environment" = "dev"
    }
    tags_all        = {
        "Environment" = "dev"
    }
    version         = "1.29"

    scaling_config {
        desired_size = 2
        max_size     = 3
        min_size     = 1
    }

    update_config {
        max_unavailable            = 1
        max_unavailable_percentage = 0
    }
}

# module.eks_gateway.aws_iam_role.eks_cluster_role:
resource "aws_iam_role" "eks_cluster_role" {
    arn                   = "arn:aws:iam::721500739616:role/akshay-eks-eks-gateway-cluster-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "eks.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-07-16T10:01:33Z"
    force_detach_policies = false
    id                    = "akshay-eks-eks-gateway-cluster-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
    ]
    max_session_duration  = 3600
    name                  = "akshay-eks-eks-gateway-cluster-role"
    path                  = "/"
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA2P7GLTAQNEMJ6IYMK"
}

# module.eks_gateway.aws_iam_role.node_group_role:
resource "aws_iam_role" "node_group_role" {
    arn                   = "arn:aws:iam::721500739616:role/akshay-eks-eks-gateway-nodegroup-role"
    assume_role_policy    = jsonencode(
        {
            Statement = [
                {
                    Action    = "sts:AssumeRole"
                    Effect    = "Allow"
                    Principal = {
                        Service = "ec2.amazonaws.com"
                    }
                },
            ]
            Version   = "2012-10-17"
        }
    )
    create_date           = "2025-07-16T10:01:33Z"
    force_detach_policies = false
    id                    = "akshay-eks-eks-gateway-nodegroup-role"
    managed_policy_arns   = [
        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
    ]
    max_session_duration  = 3600
    name                  = "akshay-eks-eks-gateway-nodegroup-role"
    path                  = "/"
    tags                  = {}
    tags_all              = {}
    unique_id             = "AROA2P7GLTAQCV6URNRE3"
}

# module.eks_gateway.aws_iam_role_policy_attachment.eks_cluster_policy:
resource "aws_iam_role_policy_attachment" "eks_cluster_policy" {
    id         = "akshay-eks-eks-gateway-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
    role       = "akshay-eks-eks-gateway-cluster-role"
}

# module.eks_gateway.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-gateway-nodegroup-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
    role       = "akshay-eks-eks-gateway-nodegroup-role"
}

# module.eks_gateway.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-gateway-nodegroup-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
    role       = "akshay-eks-eks-gateway-nodegroup-role"
}

# module.eks_gateway.aws_iam_role_policy_attachment.worker_node_policies["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]:
resource "aws_iam_role_policy_attachment" "worker_node_policies" {
    id         = "akshay-eks-eks-gateway-nodegroup-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
    policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
    role       = "akshay-eks-eks-gateway-nodegroup-role"
}


# module.vpc_backend.aws_eip.nat[0]:
resource "aws_eip" "nat" {
    allocation_id        = "eipalloc-009f2cd9bac3185cd"
    arn                  = "arn:aws:ec2:eu-central-1:721500739616:elastic-ip/eipalloc-009f2cd9bac3185cd"
    association_id       = "eipassoc-0d0bbe96d663b60bf"
    domain               = "vpc"
    id                   = "eipalloc-009f2cd9bac3185cd"
    network_border_group = "eu-central-1"
    network_interface    = "eni-07fa35ba016c85237"
    private_dns          = "ip-10-20-10-171.eu-central-1.compute.internal"
    private_ip           = "10.20.10.171"
    public_dns           = "ec2-3-79-214-218.eu-central-1.compute.amazonaws.com"
    public_ip            = "3.79.214.218"
    public_ipv4_pool     = "amazon"
    region               = "eu-central-1"
    tags                 = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-nat-eip"
    }
    tags_all             = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-nat-eip"
    }
}

# module.vpc_backend.aws_internet_gateway.igw[0]:
resource "aws_internet_gateway" "igw" {
    arn      = "arn:aws:ec2:eu-central-1:721500739616:internet-gateway/igw-06e6f76ef921dc533"
    id       = "igw-06e6f76ef921dc533"
    owner_id = "721500739616"
    region   = "eu-central-1"
    tags     = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-igw"
    }
    tags_all = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-igw"
    }
    vpc_id   = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_nat_gateway.nat[0]:
resource "aws_nat_gateway" "nat" {
    allocation_id                      = "eipalloc-009f2cd9bac3185cd"
    association_id                     = "eipassoc-0d0bbe96d663b60bf"
    connectivity_type                  = "public"
    id                                 = "nat-026de244be48ef4a3"
    network_interface_id               = "eni-07fa35ba016c85237"
    private_ip                         = "10.20.10.171"
    public_ip                          = "3.79.214.218"
    region                             = "eu-central-1"
    secondary_allocation_ids           = []
    secondary_private_ip_address_count = 0
    secondary_private_ip_addresses     = []
    subnet_id                          = "subnet-07190a63fe21caf41"
    tags                               = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-nat-gw"
    }
    tags_all                           = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-nat-gw"
    }
}

# module.vpc_backend.aws_route.private_nat_route[0]:
resource "aws_route" "private_nat_route" {
    destination_cidr_block = "0.0.0.0/0"
    id                     = "r-rtb-09a4549c5a03622781080289494"
    nat_gateway_id         = "nat-026de244be48ef4a3"
    origin                 = "CreateRoute"
    region                 = "eu-central-1"
    route_table_id         = "rtb-09a4549c5a0362278"
    state                  = "active"
}

# module.vpc_backend.aws_route_table.private_rt:
resource "aws_route_table" "private_rt" {
    arn              = "arn:aws:ec2:eu-central-1:721500739616:route-table/rtb-09a4549c5a0362278"
    id               = "rtb-09a4549c5a0362278"
    owner_id         = "721500739616"
    propagating_vgws = []
    region           = "eu-central-1"
    route            = [
        {
            carrier_gateway_id         = ""
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = ""
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = "nat-026de244be48ef4a3"
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = ""
        },
        {
            carrier_gateway_id         = ""
            cidr_block                 = "10.10.0.0/16"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = ""
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = ""
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = "pcx-095f3e64b3f958099"
        },
    ]
    tags             = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-rt"
    }
    tags_all         = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-rt"
    }
    vpc_id           = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_route_table.public_rt[0]:
resource "aws_route_table" "public_rt" {
    arn              = "arn:aws:ec2:eu-central-1:721500739616:route-table/rtb-0980b2be46e6d7215"
    id               = "rtb-0980b2be46e6d7215"
    owner_id         = "721500739616"
    propagating_vgws = []
    region           = "eu-central-1"
    route            = [
        {
            carrier_gateway_id         = ""
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = "igw-06e6f76ef921dc533"
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = ""
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = ""
        },
    ]
    tags             = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-rt"
    }
    tags_all         = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-rt"
    }
    vpc_id           = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_route_table_association.private_association[0]:
resource "aws_route_table_association" "private_association" {
    id             = "rtbassoc-0bbcb869c8ca193f7"
    region         = "eu-central-1"
    route_table_id = "rtb-09a4549c5a0362278"
    subnet_id      = "subnet-01460d1bb08911ae0"
}

# module.vpc_backend.aws_route_table_association.private_association[1]:
resource "aws_route_table_association" "private_association" {
    id             = "rtbassoc-0e9be83bb0bd22093"
    region         = "eu-central-1"
    route_table_id = "rtb-09a4549c5a0362278"
    subnet_id      = "subnet-03b81b88df8f5deab"
}

# module.vpc_backend.aws_route_table_association.public_association[0]:
resource "aws_route_table_association" "public_association" {
    id             = "rtbassoc-0562f79a37d883584"
    region         = "eu-central-1"
    route_table_id = "rtb-0980b2be46e6d7215"
    subnet_id      = "subnet-07190a63fe21caf41"
}

# module.vpc_backend.aws_route_table_association.public_association[1]:
resource "aws_route_table_association" "public_association" {
    id             = "rtbassoc-02fcf19bafbd1058d"
    region         = "eu-central-1"
    route_table_id = "rtb-0980b2be46e6d7215"
    subnet_id      = "subnet-0cbc9a2ce4f14cd4b"
}

# module.vpc_backend.aws_subnet.private[0]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-01460d1bb08911ae0"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.20.1.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-01460d1bb08911ae0"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-subnet-1"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-subnet-1"
    }
    vpc_id                                         = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_subnet.private[1]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-03b81b88df8f5deab"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.20.2.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-03b81b88df8f5deab"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-subnet-2"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-private-subnet-2"
    }
    vpc_id                                         = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_subnet.public[0]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-07190a63fe21caf41"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.20.10.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-07190a63fe21caf41"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-subnet-1"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-subnet-1"
    }
    vpc_id                                         = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_subnet.public[1]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-0cbc9a2ce4f14cd4b"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.20.11.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0cbc9a2ce4f14cd4b"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-subnet-2"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-public-subnet-2"
    }
    vpc_id                                         = "vpc-0ce2c1b70a1b6bdc0"
}

# module.vpc_backend.aws_vpc.vpc:
resource "aws_vpc" "vpc" {
    arn                                  = "arn:aws:ec2:eu-central-1:721500739616:vpc/vpc-0ce2c1b70a1b6bdc0"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.20.0.0/16"
    default_network_acl_id               = "acl-06aaeee1a0e399401"
    default_route_table_id               = "rtb-008929c8e2a70d4db"
    default_security_group_id            = "sg-0dc82aef72e0c0307"
    dhcp_options_id                      = "dopt-04fcf8bbd60291556"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0ce2c1b70a1b6bdc0"
    instance_tenancy                     = "default"
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-008929c8e2a70d4db"
    owner_id                             = "721500739616"
    region                               = "eu-central-1"
    tags                                 = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-vpc"
    }
    tags_all                             = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-vpc"
    }
}

# module.vpc_backend.aws_vpc_endpoint.ec2messages:
resource "aws_vpc_endpoint" "ec2messages" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-08977b8ce88645b6e"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-08977b8ce88645b6e-8ahms59e.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-08977b8ce88645b6e-8ahms59e-eu-central-1a.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-08977b8ce88645b6e-8ahms59e-eu-central-1b.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ec2messages.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z0987747LIC55G8I70LW"
        },
    ]
    id                    = "vpce-08977b8ce88645b6e"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-0069acbf9e116baf2",
        "eni-08b7842ba86911298",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-04faaae475352778c",
    ]
    service_name          = "com.amazonaws.eu-central-1.ec2messages"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-01460d1bb08911ae0",
        "subnet-03b81b88df8f5deab",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ec2messages-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ec2messages-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0ce2c1b70a1b6bdc0"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.20.1.79"
        subnet_id = "subnet-01460d1bb08911ae0"
    }
    subnet_configuration {
        ipv4      = "10.20.2.203"
        subnet_id = "subnet-03b81b88df8f5deab"
    }
}

# module.vpc_backend.aws_vpc_endpoint.ssm:
resource "aws_vpc_endpoint" "ssm" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-09c280e4d9fbae944"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-09c280e4d9fbae944-q2qkilqz.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-09c280e4d9fbae944-q2qkilqz-eu-central-1b.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-09c280e4d9fbae944-q2qkilqz-eu-central-1a.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ssm.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z02843403JPE614CHYEBQ"
        },
        {
            dns_name       = "ssm.eu-central-1.api.aws"
            hosted_zone_id = "Z0307156NB0WVNCQXRK1"
        },
    ]
    id                    = "vpce-09c280e4d9fbae944"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-06cf6e81c5d4067e6",
        "eni-0cdf7289dbbe0e58d",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-04faaae475352778c",
    ]
    service_name          = "com.amazonaws.eu-central-1.ssm"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-01460d1bb08911ae0",
        "subnet-03b81b88df8f5deab",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ssm-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ssm-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0ce2c1b70a1b6bdc0"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.20.1.186"
        subnet_id = "subnet-01460d1bb08911ae0"
    }
    subnet_configuration {
        ipv4      = "10.20.2.225"
        subnet_id = "subnet-03b81b88df8f5deab"
    }
}

# module.vpc_backend.aws_vpc_endpoint.ssmmessages:
resource "aws_vpc_endpoint" "ssmmessages" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-0253819a816eb8ad8"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-0253819a816eb8ad8-mmfckaqy.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0253819a816eb8ad8-mmfckaqy-eu-central-1a.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0253819a816eb8ad8-mmfckaqy-eu-central-1b.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ssmmessages.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z062609531B24J5OYIRIM"
        },
    ]
    id                    = "vpce-0253819a816eb8ad8"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-0cf242ae3b5f20315",
        "eni-0f2554b3af12bb508",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-04faaae475352778c",
    ]
    service_name          = "com.amazonaws.eu-central-1.ssmmessages"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-01460d1bb08911ae0",
        "subnet-03b81b88df8f5deab",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ssmmessages-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-ssmmessages-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0ce2c1b70a1b6bdc0"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.20.1.120"
        subnet_id = "subnet-01460d1bb08911ae0"
    }
    subnet_configuration {
        ipv4      = "10.20.2.102"
        subnet_id = "subnet-03b81b88df8f5deab"
    }
}

# module.vpc_backend.aws_vpc_endpoint.sts:
resource "aws_vpc_endpoint" "sts" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-01c8704ae5bf9892a"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-01c8704ae5bf9892a-95fm6zkc.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-01c8704ae5bf9892a-95fm6zkc-eu-central-1b.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-01c8704ae5bf9892a-95fm6zkc-eu-central-1a.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "sts.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z07592393O7KZ88LNE246"
        },
        {
            dns_name       = "sts.eu-central-1.api.aws"
            hosted_zone_id = "Z02841912F9APPDX8ZNCQ"
        },
    ]
    id                    = "vpce-01c8704ae5bf9892a"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-0c0d83d6c1c882321",
        "eni-0cbf52d9211d0dcf6",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = [
        "sg-04faaae475352778c",
    ]
    service_name          = "com.amazonaws.eu-central-1.sts"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-01460d1bb08911ae0",
        "subnet-03b81b88df8f5deab",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-sts-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-backend-sts-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0ce2c1b70a1b6bdc0"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.20.1.80"
        subnet_id = "subnet-01460d1bb08911ae0"
    }
    subnet_configuration {
        ipv4      = "10.20.2.201"
        subnet_id = "subnet-03b81b88df8f5deab"
    }
}


# module.vpc_gateway.aws_eip.nat[0]:
resource "aws_eip" "nat" {
    allocation_id        = "eipalloc-0487394336d807553"
    arn                  = "arn:aws:ec2:eu-central-1:721500739616:elastic-ip/eipalloc-0487394336d807553"
    association_id       = "eipassoc-099dfbbd73299546e"
    domain               = "vpc"
    id                   = "eipalloc-0487394336d807553"
    network_border_group = "eu-central-1"
    network_interface    = "eni-060d57c4b5cfa3439"
    private_dns          = "ip-10-10-10-238.eu-central-1.compute.internal"
    private_ip           = "10.10.10.238"
    public_dns           = "ec2-3-126-243-186.eu-central-1.compute.amazonaws.com"
    public_ip            = "3.126.243.186"
    public_ipv4_pool     = "amazon"
    region               = "eu-central-1"
    tags                 = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-nat-eip"
    }
    tags_all             = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-nat-eip"
    }
}

# module.vpc_gateway.aws_internet_gateway.igw[0]:
resource "aws_internet_gateway" "igw" {
    arn      = "arn:aws:ec2:eu-central-1:721500739616:internet-gateway/igw-0c1b166f41d1ee2d7"
    id       = "igw-0c1b166f41d1ee2d7"
    owner_id = "721500739616"
    region   = "eu-central-1"
    tags     = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-igw"
    }
    tags_all = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-igw"
    }
    vpc_id   = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_nat_gateway.nat[0]:
resource "aws_nat_gateway" "nat" {
    allocation_id                      = "eipalloc-0487394336d807553"
    association_id                     = "eipassoc-099dfbbd73299546e"
    connectivity_type                  = "public"
    id                                 = "nat-033a8e6089affc78f"
    network_interface_id               = "eni-060d57c4b5cfa3439"
    private_ip                         = "10.10.10.238"
    public_ip                          = "3.126.243.186"
    region                             = "eu-central-1"
    secondary_allocation_ids           = []
    secondary_private_ip_address_count = 0
    secondary_private_ip_addresses     = []
    subnet_id                          = "subnet-0cd44091022098a67"
    tags                               = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-nat-gw"
    }
    tags_all                           = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-nat-gw"
    }
}

# module.vpc_gateway.aws_route.private_nat_route[0]:
resource "aws_route" "private_nat_route" {
    destination_cidr_block = "0.0.0.0/0"
    id                     = "r-rtb-0579138f64fde417b1080289494"
    nat_gateway_id         = "nat-033a8e6089affc78f"
    origin                 = "CreateRoute"
    region                 = "eu-central-1"
    route_table_id         = "rtb-0579138f64fde417b"
    state                  = "active"
}

# module.vpc_gateway.aws_route_table.private_rt:
resource "aws_route_table" "private_rt" {
    arn              = "arn:aws:ec2:eu-central-1:721500739616:route-table/rtb-0579138f64fde417b"
    id               = "rtb-0579138f64fde417b"
    owner_id         = "721500739616"
    propagating_vgws = []
    region           = "eu-central-1"
    route            = [
        {
            carrier_gateway_id         = ""
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = ""
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = "nat-033a8e6089affc78f"
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = ""
        },
        {
            carrier_gateway_id         = ""
            cidr_block                 = "10.20.0.0/16"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = ""
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = ""
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = "pcx-095f3e64b3f958099"
        },
    ]
    tags             = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-rt"
    }
    tags_all         = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-rt"
    }
    vpc_id           = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_route_table.public_rt[0]:
resource "aws_route_table" "public_rt" {
    arn              = "arn:aws:ec2:eu-central-1:721500739616:route-table/rtb-09dd8b4d918b50711"
    id               = "rtb-09dd8b4d918b50711"
    owner_id         = "721500739616"
    propagating_vgws = []
    region           = "eu-central-1"
    route            = [
        {
            carrier_gateway_id         = ""
            cidr_block                 = "0.0.0.0/0"
            core_network_arn           = ""
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = "igw-0c1b166f41d1ee2d7"
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = ""
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = ""
        },
    ]
    tags             = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-rt"
    }
    tags_all         = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-rt"
    }
    vpc_id           = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_route_table_association.private_association[0]:
resource "aws_route_table_association" "private_association" {
    id             = "rtbassoc-0a0ab04dfe6b6db66"
    region         = "eu-central-1"
    route_table_id = "rtb-0579138f64fde417b"
    subnet_id      = "subnet-0ff27771a41e93b18"
}

# module.vpc_gateway.aws_route_table_association.private_association[1]:
resource "aws_route_table_association" "private_association" {
    id             = "rtbassoc-0263881e407649498"
    region         = "eu-central-1"
    route_table_id = "rtb-0579138f64fde417b"
    subnet_id      = "subnet-006025148b5065ac6"
}

# module.vpc_gateway.aws_route_table_association.public_association[0]:
resource "aws_route_table_association" "public_association" {
    id             = "rtbassoc-0d1b2eff7076565bd"
    region         = "eu-central-1"
    route_table_id = "rtb-09dd8b4d918b50711"
    subnet_id      = "subnet-0cd44091022098a67"
}

# module.vpc_gateway.aws_route_table_association.public_association[1]:
resource "aws_route_table_association" "public_association" {
    id             = "rtbassoc-0fe9230793afe5822"
    region         = "eu-central-1"
    route_table_id = "rtb-09dd8b4d918b50711"
    subnet_id      = "subnet-0d61312612c6b4a2a"
}

# module.vpc_gateway.aws_subnet.private[0]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-0ff27771a41e93b18"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.10.1.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0ff27771a41e93b18"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-subnet-1"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-subnet-1"
    }
    vpc_id                                         = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_subnet.private[1]:
resource "aws_subnet" "private" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-006025148b5065ac6"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.10.2.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-006025148b5065ac6"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = false
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-subnet-2"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-private-subnet-2"
    }
    vpc_id                                         = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_subnet.public[0]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-0cd44091022098a67"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.10.10.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0cd44091022098a67"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-subnet-1"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-subnet-1"
    }
    vpc_id                                         = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_subnet.public[1]:
resource "aws_subnet" "public" {
    arn                                            = "arn:aws:ec2:eu-central-1:721500739616:subnet/subnet-0d61312612c6b4a2a"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.10.11.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0d61312612c6b4a2a"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "721500739616"
    private_dns_hostname_type_on_launch            = "ip-name"
    region                                         = "eu-central-1"
    tags                                           = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-subnet-2"
    }
    tags_all                                       = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-public-subnet-2"
    }
    vpc_id                                         = "vpc-0532eab6d8e79dd63"
}

# module.vpc_gateway.aws_vpc.vpc:
resource "aws_vpc" "vpc" {
    arn                                  = "arn:aws:ec2:eu-central-1:721500739616:vpc/vpc-0532eab6d8e79dd63"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.10.0.0/16"
    default_network_acl_id               = "acl-0ea14df9dfd028e4a"
    default_route_table_id               = "rtb-0da642d6057e778e1"
    default_security_group_id            = "sg-0ac83cf6464b19040"
    dhcp_options_id                      = "dopt-04fcf8bbd60291556"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0532eab6d8e79dd63"
    instance_tenancy                     = "default"
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-0da642d6057e778e1"
    owner_id                             = "721500739616"
    region                               = "eu-central-1"
    tags                                 = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-vpc"
    }
    tags_all                             = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-vpc"
    }
}

# module.vpc_gateway.aws_vpc_endpoint.ec2messages:
resource "aws_vpc_endpoint" "ec2messages" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-052cc8140f0a8136c"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-052cc8140f0a8136c-ik8qcbka.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-052cc8140f0a8136c-ik8qcbka-eu-central-1a.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-052cc8140f0a8136c-ik8qcbka-eu-central-1b.ec2messages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ec2messages.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z0987281CJOSA1CLUW4G"
        },
    ]
    id                    = "vpce-052cc8140f0a8136c"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-00832a4ad6ec4ec04",
        "eni-0417893885ddeaa70",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = []
    service_name          = "com.amazonaws.eu-central-1.ec2messages"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-006025148b5065ac6",
        "subnet-0ff27771a41e93b18",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ec2messages-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ec2messages-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0532eab6d8e79dd63"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.10.1.242"
        subnet_id = "subnet-0ff27771a41e93b18"
    }
    subnet_configuration {
        ipv4      = "10.10.2.77"
        subnet_id = "subnet-006025148b5065ac6"
    }
}

# module.vpc_gateway.aws_vpc_endpoint.ssm:
resource "aws_vpc_endpoint" "ssm" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-0b9a0bd6a897028f0"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-0b9a0bd6a897028f0-d08wgr9o.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0b9a0bd6a897028f0-d08wgr9o-eu-central-1a.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0b9a0bd6a897028f0-d08wgr9o-eu-central-1b.ssm.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ssm.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z09872512FCE24MV9JPB7"
        },
        {
            dns_name       = "ssm.eu-central-1.api.aws"
            hosted_zone_id = "Z0626130Q3BPGNV4FQMD"
        },
    ]
    id                    = "vpce-0b9a0bd6a897028f0"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-0802cc3c9f601aff4",
        "eni-0d4aa52c03514bf53",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = []
    service_name          = "com.amazonaws.eu-central-1.ssm"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-006025148b5065ac6",
        "subnet-0ff27771a41e93b18",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ssm-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ssm-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0532eab6d8e79dd63"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.10.1.167"
        subnet_id = "subnet-0ff27771a41e93b18"
    }
    subnet_configuration {
        ipv4      = "10.10.2.82"
        subnet_id = "subnet-006025148b5065ac6"
    }
}

# module.vpc_gateway.aws_vpc_endpoint.ssmmessages:
resource "aws_vpc_endpoint" "ssmmessages" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-0013bf875e27a8f03"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-0013bf875e27a8f03-630k43jv.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0013bf875e27a8f03-630k43jv-eu-central-1a.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0013bf875e27a8f03-630k43jv-eu-central-1b.ssmmessages.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "ssmmessages.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z02835833PDIZWO8WEQT6"
        },
    ]
    id                    = "vpce-0013bf875e27a8f03"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-08cba0aead3f956d0",
        "eni-0d5bcd542eb4fec56",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = []
    service_name          = "com.amazonaws.eu-central-1.ssmmessages"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-006025148b5065ac6",
        "subnet-0ff27771a41e93b18",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ssmmessages-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-ssmmessages-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0532eab6d8e79dd63"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.10.1.68"
        subnet_id = "subnet-0ff27771a41e93b18"
    }
    subnet_configuration {
        ipv4      = "10.10.2.164"
        subnet_id = "subnet-006025148b5065ac6"
    }
}

# module.vpc_gateway.aws_vpc_endpoint.sts:
resource "aws_vpc_endpoint" "sts" {
    arn                   = "arn:aws:ec2:eu-central-1:721500739616:vpc-endpoint/vpce-0950ea3c49b85dc75"
    cidr_blocks           = []
    dns_entry             = [
        {
            dns_name       = "vpce-0950ea3c49b85dc75-oug8ky6d.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0950ea3c49b85dc75-oug8ky6d-eu-central-1a.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "vpce-0950ea3c49b85dc75-oug8ky6d-eu-central-1b.sts.eu-central-1.vpce.amazonaws.com"
            hosted_zone_id = "Z273ZU8SZ5RJPC"
        },
        {
            dns_name       = "sts.eu-central-1.amazonaws.com"
            hosted_zone_id = "Z0758014AC7Q0AFYDI5P"
        },
        {
            dns_name       = "sts.eu-central-1.api.aws"
            hosted_zone_id = "Z06361151WTG717EYEF95"
        },
    ]
    id                    = "vpce-0950ea3c49b85dc75"
    ip_address_type       = "ipv4"
    network_interface_ids = [
        "eni-06a0d3955e34df1aa",
        "eni-0e70fc6d5be922414",
    ]
    owner_id              = "721500739616"
    policy                = jsonencode(
        {
            Statement = [
                {
                    Action    = "*"
                    Effect    = "Allow"
                    Principal = "*"
                    Resource  = "*"
                },
            ]
        }
    )
    private_dns_enabled   = true
    region                = "eu-central-1"
    requester_managed     = false
    route_table_ids       = []
    security_group_ids    = []
    service_name          = "com.amazonaws.eu-central-1.sts"
    service_region        = "eu-central-1"
    state                 = "available"
    subnet_ids            = [
        "subnet-006025148b5065ac6",
        "subnet-0ff27771a41e93b18",
    ]
    tags                  = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-sts-endpoint"
    }
    tags_all              = {
        "Environment" = "dev"
        "Name"        = "vpc-gateway-sts-endpoint"
    }
    vpc_endpoint_type     = "Interface"
    vpc_id                = "vpc-0532eab6d8e79dd63"

    dns_options {
        dns_record_ip_type                             = "ipv4"
        private_dns_only_for_inbound_resolver_endpoint = false
    }

    subnet_configuration {
        ipv4      = "10.10.1.133"
        subnet_id = "subnet-0ff27771a41e93b18"
    }
    subnet_configuration {
        ipv4      = "10.10.2.125"
        subnet_id = "subnet-006025148b5065ac6"
    }
}


# module.vpc_peering.aws_route.accepter_to_requester[0]:
resource "aws_route" "accepter_to_requester" {
    destination_cidr_block    = "10.10.0.0/16"
    id                        = "r-rtb-09a4549c5a0362278519371977"
    origin                    = "CreateRoute"
    region                    = "eu-central-1"
    route_table_id            = "rtb-09a4549c5a0362278"
    state                     = "active"
    vpc_peering_connection_id = "pcx-095f3e64b3f958099"
}

# module.vpc_peering.aws_route.requester_to_accepter[0]:
resource "aws_route" "requester_to_accepter" {
    destination_cidr_block    = "10.20.0.0/16"
    id                        = "r-rtb-0579138f64fde417b662290444"
    origin                    = "CreateRoute"
    region                    = "eu-central-1"
    route_table_id            = "rtb-0579138f64fde417b"
    state                     = "active"
    vpc_peering_connection_id = "pcx-095f3e64b3f958099"
}

# module.vpc_peering.aws_vpc_peering_connection.peer:
resource "aws_vpc_peering_connection" "peer" {
    accept_status = "active"
    auto_accept   = true
    id            = "pcx-095f3e64b3f958099"
    peer_owner_id = "721500739616"
    peer_region   = "eu-central-1"
    peer_vpc_id   = "vpc-0ce2c1b70a1b6bdc0"
    region        = "eu-central-1"
    tags          = {
        "Environment" = "dev"
        "Name"        = "peer-gateway-backend"
    }
    tags_all      = {
        "Environment" = "dev"
        "Name"        = "peer-gateway-backend"
    }
    vpc_id        = "vpc-0532eab6d8e79dd63"

    accepter {
        allow_remote_vpc_dns_resolution = false
    }

    requester {
        allow_remote_vpc_dns_resolution = false
    }
}
